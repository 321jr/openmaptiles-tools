#!/usr/bin/env python
"""
Usage:
  generate-etlgraph <layer-definition> 
  generate-etlgraph --help
  generate-etlgraph --version
Options:
  --help                Show this screen.
  --version             Show version.

"""
from __future__ import (absolute_import, division, print_function,
                        unicode_literals)

from docopt import docopt

import openmaptiles
from openmaptiles.tileset import Tileset
from openmaptiles.tileset import Layer

def collect_etldot(layer):
    dot = ('digraph G\n'
           '{\n'
           '/* generated from the source code ( etldoc: ) */ \n'    
           'rankdir=LR;\n')

    layer_name = layer['layer']['id']
    dot += '\n'
    dot += "subgraph cluster_"+layer_name+ " {\n"
    dot += '  style=filled;\n'
    dot += '  color=lightblue;\n'
    dot += '\n'         
    for mappingstr in layer.imposm_mappings_str:
            for line in mappingstr.splitlines():
                sline = line.strip(' \t\n\r')           
                if( sline[:9]=='# etldoc:' ):
                    dot += sline [9:].strip(' \t\n\r')+'\n'

    for schema in layer.schemas:
        for line in schema.splitlines():
            sline = line.strip(' \t\n\r')
            if( sline[:10]=='-- etldoc:' ):
                dot += sline [10:].strip(' \t\n\r')+'\n'
    dot += '}\n'
        
    dot+='\n}\n'
    return dot


if __name__ == '__main__':
    args = docopt(__doc__, version=openmaptiles.__version__)
    layer = Layer.parse(args['<layer-definition>'])
    etldoc=collect_etldot(layer)
    print(etldoc)
